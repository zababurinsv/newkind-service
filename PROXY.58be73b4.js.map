{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,GAAM;AACN,GAAG,CAAC,UAAU,GAAG,CAAsB;AACvC,GAAG,CAAC,WAAW,GAAG,CAAC;IACf,CAAmB;AACvB,CAAC;AACD,EAAI,AAAJ,EAAI;AACJ,GAAG,CAAC,MAAM,GAAG,CAAC;IACV,KAAK,EAAE,UAAU;IACjB,IAAI,EAAE,WAAW;IACjB,SAAS,EAAE,CAAC;QAAA,UAAU;IAAA,CAAC;IACvB,OAAO,EAAE,CAAC;IACV,MAAM,EAAE,CAAC;IAAA,CAAC;IACV,qBAAqB,EAAE,CAAkB;IACzC,QAAQ,EAAE,CAAC;QACP,cAAc,EAAE,KAAK;QACrB,SAAS,EAAE,KAAK;QAChB,cAAc,EAAE,KAAK;QACrB,qBAAqB,EAAE,KAAK;QAC5B,gBAAgB,EAAE,KAAK;IAC3B,CAAC;IACD,WAAW,GAAG,WAAW,GAAK,CAAC;QAC3B,MAAM,CAAE,WAAW;YACf,IAAI,CAAA,CAAO;gBACP,MAAM,CAAC,CAAY;;gBAGnB,MAAM,CAAC,KAAK;;IAGxB,CAAC;AACL,CAAC;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAS,WAAG,KAAK,GAAK,CAAC;IACzC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW;IAChC,KAAK,CAAC,SAAS,CACX,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EACnB,IAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACnB,OAAO,CAAC,GAAG,CAAC,CAAU,cAAK,MAAM,CAAC,IAAI;QACnC,MAAG,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI;IACnC,CAAC;IAET,OAAO,CAAC,GAAG,CAAC,CAAmB;AAChC,CAAF;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAU,YAAG,KAAK,GAAK,CAAC;IAC1C,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK;IAClC,KAAK,CAAC,SAAS,CACX,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,CAAC;QACrC,MAAM,CAAC,OAAO,CAAC,GAAG,CACd,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YAChC,EAAE,EAAE,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,SAAS,MAAM,EAAE,EAC1C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS;QAEtC,CAAC;IAET,CAAC;IAEL,OAAO,CAAC,GAAG,CAAC,CAAoB;AACjC,CAAF;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAmB,oBAAE,QAAQ,CAAC,KAAK,EAAE,CAAC;IACxD,OAAO,CAAC,GAAG,CAAC,CAA6B,iCAAK,KAAK;AAChD,EAA6B,AAAhC,8BAAgC;AAEhC,EAAgD,AAAhD,8CAAgD;AAChD,EAAiC,AAAjC,+BAAiC;AACjC,EAAuB,AAAvB,qBAAuB;AACvB,EAAqD,AAArD,mDAAqD;AACrD,EAAM,AAAN,IAAM;AACN,EAAE;AACF,EAA4B,AAA5B,0BAA4B;AAChC,CAAC;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAM,OAAE,QAAQ,CAAC,KAAK,EAAE,CAAC;IAC3C,OAAO,CAAC,GAAG,CAAC,CAAgB,oBAAK,KAAK;AACnC,EAA8C,AAAjD,+CAAiD;AACjD,EAAgC,AAAhC,8BAAgC;AAChC,EAAiD,AAAjD,+CAAiD;AACjD,EAAyC,AAAzC,uCAAyC;AACzC,EAAiD,AAAjD,+CAAiD;AACjD,EAAmB,AAAnB,iBAAmB;AACnB,EAAkD,AAAlD,gDAAkD;AAClD,EAAsB,AAAtB,oBAAsB;AACtB,EAAsB,AAAtB,oBAAsB;AACtB,EAAmB,AAAnB,iBAAmB;AACnB,EAAS,AAAT,OAAS;AACT,EAAK,AAAL,GAAK;AACT,CAAC;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAM,QAAG,KAAK,GAAK,CAAC;IACtC,OAAO,CAAC,GAAG,CAAC,CAAgB,oBAAK,KAAK;AACnC,EAAgC,AAAnC,iCAAmC;AACnC,EAAgC,AAAhC,8BAAgC;AAChC,EAAqC,AAArC,mCAAqC;AACrC,EAAuB,AAAvB,6BAA+B;AAC3B,CAAP;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAO,SAAE,KAAK,GAAI,CAAC;IACrC,OAAO,CAAC,GAAG,CAAC,CAAiB,qBAAK,KAAK,CAAC,OAAO,CAAC,GAAG;IAChD,EAAD,EAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,EAC7B,KAAK,CAAC,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EACtD,KAAK,EAAE,GAAG,GAAK,CAAC;QACb,EAAyC,AAAzC,uCAAyC;QACzC,SAAS,CAAC,KAAK,CAAC,OAAO;IACvB,EAAuC,AAAvC,qCAAuC;IAC3C,CAAC;SACF,EAAE,EAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,EAC/B,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;SACtC,EAAE,EAAC,MAAM,CAAC,QAAQ,CAAC,cAAc,EAAE,CAAC;QACvC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;QACzC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO;IACxC,CAAC,MAAM,EAAE,EAAC,MAAM,CAAC,QAAQ,CAAC,qBAAqB,EAAE,CAAC;QAC9C,EAA0E,AAA1E,0GAA4G;QAC1E,KAA7B,CAAC,WAAW,CAAC,SAAS,CAAC,KAAK,CAAC,OAAO;QACzC,KAAK,CAAC,SAAS,CACX,MAAM,CAAC,KAAK,CAAC,OAAO,CAChB,EAAgF,AAAhF,6IAA+I;SAC/E,IAA3D,CAAC,OAAO;IAEzB,CAAC,MACG,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAC,CAAC;QAAC,OAAO,EAAE,CAAC;YACtD,CAAc,eAAE,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW;QAChE,CAAC;IAAA,CAAC,GACD,IAAI,EAAC,QAAQ,GAAI,CAAC;QACf,EAAyC,AAAzC,uCAAyC;QACrC,EAAE,GAAE,QAAQ,IAAI,QAAQ,CAAC,MAAM,KAAK,GAAG,IAAI,QAAQ,CAAC,IAAI,KAAK,CAAO,QAChE,MAAM,CAAC,QAAQ;QAEnB,MAAM,CAAC,QAAQ;IACnB,CAAC,EACH,KAAK,KAAO,WAAW;;AAGrC,CAAC;AAED,IAAI,CAAC,gBAAgB,CAAC,CAAS,iBAAS,KAAK,GAAK,CAAC;IAC/C,OAAO,CAAC,GAAG,CAAC,CAAqB,4BAAQ,KAAK,CAAC,IAAI;IAC7C,EAAJ,EAAE,KAAK,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,CAAc,eAAE,CAAC;QAC7G,OAAO,CAAC,GAAG,CAAC,CAAqB,4BAAQ,KAAK,CAAC,IAAI,CAAC,KAAK;QACnD,GAAH,CAAC,GAAG,CAAC,IAAI,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAC/B,MAAM,CAAC,MAAM,GAAG,QAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,IAAI;QAE1D,OAAO,CAAC,GAAG,CAAC,CAAuB,iCAAW,KAAK,CAAC,IAAI,CAAC,KAAK;QACrD,KAAJ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACrB,KAAK,EAAE,CAAC;gBACJ,CAAc,eAAE,IAAI;YACxB,CAAC;QACL,CAAC;IACL,CAAC,MACG,EAAE,EAAC,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QACjB,EAAoC,AAApC,kCAAoC;QACpC,OAAO,CAAC,GAAG,CAAC,CAAuB,iCAAW,KAAK,CAAC,IAAI,CAAC,KAAK;QACrD,KAAJ,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;YACtB,KAAK,EAAE,CAAC;gBACJ,CAAkB,mBAAE,IAAI;YAC5B,CAAC;QACL,CAAC;IACL,CAAC;AAET,CAAC;SAEQ,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,CAAC;IACpC,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,GAAK,CAAC;QACrC,GAAG,CAAC,SAAS,GAAG,UAAU,CAAC,MAAM,EAAE,OAAO;QAC1C,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,GAAK,CAAC;YAC/B,YAAY,CAAC,SAAS;YACtB,OAAO,CAAC,QAAQ;QACpB,CAAC,EAAE,MAAM;IACb,CAAC;AACL,CAAC;SAEQ,SAAS,CAAC,OAAO,EAAE,CAAC;IACzB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,GACxC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,GAC/B,QAAQ,IAAI,OAAO,CAAC,MAAM,CAAC,CAAU;;;AAEjD,CAAC;SAEQ,MAAM,CAAC,OAAO,EAAE,CAAC;IACtB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,GACxC,KAAK,CAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,GACzB,EAA+B,AAA/B,6BAA+B;YAC/B,KAAK,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,IAAI,IAAI,KAAO,QAAQ;;;;AAGpE,CAAC;AAED,EAAwD,AAAxD,iGAAmG;SAC/C,OAApC,CAAC,QAAQ,EAAE,CAAC;IACxB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,GAAG,IAAI,EAAE,OAAO,GAAK,CAAC;QAC9C,OAAO,CAAC,OAAO,EAAE,MAAM,GAAK,CAAC;YACzB,EAAyC,AAAzC,oEAAsE;YACzC,EAAa,AAA1C,wCAA0C;YAC1C,KAAK,CAAC,OAAO,GAAG,CAAC;gBACb,IAAI,EAAE,CAAS;gBACf,GAAG,EAAE,QAAQ,CAAC,GAAG;gBACjB,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAM;YACrC,CAAC;YACD,EAA0C,AAA1C,0EAA0C;YAC1C,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO;QAC7C,CAAC;IACL,CAAC;AACL,CAAC;AACD,KAAK,CAAC,QAAQ,IAAI,ssFAgElB;SAES,WAAW,GAAG,CAAC;IACpB,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAAC,OAAO,EAAE,CAAC;YAClD,CAAc,eAAE,CAA0B;QAClD,CAAC;IAAA,CAAC;AACN,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oD,c;;4C,M;;2C,M;;iD,W;;kD,Y;;8C,Q;;sD,gB;;oD,c;;0C,I;;AEjRD,E,AAAA,smB,AAAA,E,CAwBa,KAAA,CAAA,WAAW,GAAG,MAAM,CAAC,CAAe;AACpC,KAAA,CAAA,cAAc,GAAG,MAAM,CAAC,CAAkB;AAC1C,KAAA,CAAA,YAAY,GAAG,MAAM,CAAC,CAAsB;AAEzD,KAAA,CAAM,WAAW,GAAG,MAAM,CAAC,CAAgB;AAuJ3C,KAAA,CAAM,QAAQ,IAAI,GAAY,GAC3B,MAAA,CAAO,GAAG,KAAK,CAAQ,WAAI,GAAG,KAAK,IAAI,IAAK,MAAA,CAAO,GAAG,KAAK,CAAU;;AA+BxE,E,AAAA,oE,AAAA,E,CAGA,KAAA,CAAM,oBAAoB,GAAyC,CAAnE;IACE,SAAS,GAAG,GAAG,GACb,QAAQ,CAAC,GAAG,KAAM,GAAmB,CAAC,WAAW;;IACnD,SAAS,EAAC,GAAG,EAAb,CAAA;QACE,KAAA,CAAM,CAAA,CAAE,KAAK,GAAE,KAAK,EAAA,CAAE,GAAG,GAAA,CAAI,cAAc;QAC3C,MAAM,CAAC,GAAG,EAAE,KAAK;QACjB,MAAA,CAAO,CAAC;YAAA,KAAK;YAAE,CAAC;gBAAA,KAAK;YAAA,CAAC;QAAA,CAAC;IACxB,CAAA;IACD,WAAW,EAAC,IAAI,EAAhB,CAAA;QACE,IAAI,CAAC,KAAK;QACV,MAAA,CAAO,IAAI,CAAC,IAAI;IACjB,CAAA;AACF,CAAA;AAUD,E,AAAA,+D,AAAA,E,CAGA,KAAA,CAAM,oBAAoB,GAGtB,CAHJ;IAIE,SAAS,GAAG,KAAK,GACf,QAAQ,CAAC,KAAK,KAAK,WAAW,IAAI,KAAK;;IACzC,SAAS,EAAC,CAAA,CAAE,KAAK,EAAA,CAAE,EAAnB,CAAA;QACE,GAAA,CAAI,UAAiC;QACrC,EAAA,EAAI,KAAK,YAAY,KAAK,EACxB,UAAU,GAAG,CAAb;YACE,OAAO,EAAE,IAAI;YACb,KAAK,EAAE,CAAP;gBACE,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,IAAI,EAAE,KAAK,CAAC,IAAI;gBAChB,KAAK,EAAE,KAAK,CAAC,KAAK;YACnB,CAAA;QACF,CAAA;aAED,UAAU,GAAG,CAAA;YAAE,OAAO,EAAE,KAAK;YAAE,KAAK;QAAA,CAAE;QAExC,MAAA,CAAO,CAAC;YAAA,UAAU;YAAE,CAAA,CAAE;QAAA,CAAC;IACxB,CAAA;IACD,WAAW,EAAC,UAAU,EAAtB,CAAA;QACE,EAAA,EAAI,UAAU,CAAC,OAAO,EACpB,KAAA,CAAM,MAAM,CAAC,MAAM,CACjB,GAAA,CAAI,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAClC,UAAU,CAAC,KAAK;QAGpB,KAAA,CAAM,UAAU,CAAC,KAAK;IACvB,CAAA;AACF,CAAA;AAED,E,AAAA,gE,AAAA,E,CAGa,KAAA,CAAA,gBAAgB,GAAG,GAAA,CAAI,GAAG,CAGrC,CAHW;IAIX,CAAC;QAAA,CAAO;QAAE,oBAAoB;IAAA,CAAC;IAC/B,CAAC;QAAA,CAAO;QAAE,oBAAoB;IAAA,CAAC;AAChC,CAAA;SAEe,MAAM,CAAC,IAAQ,EAAE,EAAA,GAAe,IAAW,EAA3C,CAAA;IACd,EAAE,CAAC,gBAAgB,CAAC,CAAS,UAAE,QAAA,CAAS,QAAQ,CAAC,EAAgB,EAAjE,CAAA;QACE,EAAA,GAAK,EAAE,KAAK,EAAE,CAAC,IAAI,EACjB,MAAA;QAEF,KAAA,CAAM,CAAA,CAAE,EAAE,GAAE,IAAI,GAAE,IAAI,EAAA,CAAE,GAAA,MAAA,CAAA,MAAA,CAAA,CAAA;YACtB,IAAI,EAAE,CAAA,CAAc;QAAA,CAAA,EAChB,EAAE,CAAC,IAAgB;QAEzB,KAAA,CAAM,YAAY,IAAI,EAAE,CAAC,IAAI,CAAC,YAAY,IAAI,CAAA,CAAE,EAAE,GAAG,CAAC,aAAa;QACnE,GAAA,CAAI,YAAW;QACf,GAAA,CAAI,CAAJ;YACE,KAAA,CAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,EAAE,MAAM,EAAE,GAAG,EAAE,IAAI,GAAK,GAAG,CAAC,IAAI;cAAG,IAAG;YACrE,KAAA,CAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,IAAI,GAAK,GAAG,CAAC,IAAI;cAAG,IAAG;YAC1D,MAAA,CAAQ,IAAI;gBACV,IAAA,CAAA,CAAA,IAAA,CAAA,AAAA,EAAA,AAAA,KAAA,AAAA,EAAA;oBAEI,YAAW,GAAG,QAAQ;oBAExB,KAAA;gBACF,IAAA,CAAA,CAAA,IAAA,CAAA,AAAA,EAAA,AAAA,KAAA,AAAA,EAAA;oBAEI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,EAAE,CAAC,KAAK,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK;oBACvD,YAAW,GAAG,IAAI;oBAEpB,KAAA;gBACF,IAAA,CAAA,CAAA,MAAA,CAAA,AAAA,EAAA,AAAA,OAAA,AAAA,EAAA;oBAEI,YAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,YAAY;oBAEnD,KAAA;gBACF,IAAA,CAAA,CAAA,UAAA,CAAA,AAAA,EAAA,AAAA,WAAA,AAAA,EAAA;oBACE,CAAA;wBACE,KAAA,CAAM,KAAK,GAAG,GAAA,CAAI,QAAQ,IAAI,YAAY;wBAC1C,YAAW,GAAG,MAAK,CAAC,KAAK;oBAC1B,CAAA;oBACD,KAAA;gBACF,IAAA,CAAA,CAAA,SAAA,CAAA,AAAA,EAAA,AAAA,UAAA,AAAA,EAAA;oBACE,CAAA;wBACE,KAAA,CAAM,CAAA,CAAE,KAAK,GAAE,KAAK,EAAA,CAAE,GAAG,GAAA,CAAI,cAAc;wBAC3C,MAAM,CAAC,IAAG,EAAE,KAAK;wBACjB,YAAW,GAAG,QAAQ,CAAC,KAAK,EAAE,CAAC;4BAAA,KAAK;wBAAA,CAAC;oBACtC,CAAA;oBACD,KAAA;gBACF,IAAA,CAAA,CAAA,QAAA,CAAA,AAAA,EAAA,AAAA,SAAA,AAAA,EAAA;oBAEI,YAAW,GAAG,SAAS;oBAEzB,KAAA;;oBAEA,MAAA;;QAEL,CAAA,CAAC,KAAA,EAAO,MAAK,EAAE,CAAd;YACA,YAAW,GAAG,CAAA;gBAAE,KAAK,EAAL,MAAK;iBAAG,WAAW,GAAG,CAAC;YAAA,CAAE;QAC1C,CAAA;QACD,OAAO,CAAC,OAAO,CAAC,YAAW,EACxB,KAAK,EAAE,KAAK,GAAZ,CAAA;YACC,MAAA,CAAO,CAAA;gBAAE,KAAK;iBAAG,WAAW,GAAG,CAAC;YAAA,CAAE;QACnC,CAAA,EACA,IAAI,EAAE,WAAW,GAAjB,CAAA;YACC,KAAA,EAAO,SAAS,EAAE,aAAa,IAAI,WAAW,CAAC,WAAW;YAC1D,EAAE,CAAC,WAAW,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;YAAA,CAAA,EAAM,SAAS,GAAA,CAAA;gBAAE,EAAE;YAAA,CAAA,GAAI,aAAa;YAClD,EAAA,EAAI,IAAI,KAAA,CAAA,QAAA,CAAA,AAAA,EAAA,AAAA,SAAA,AAAA,EAAA,GAA0B,CAAlC;gB,E,A,0D;gBAEE,EAAE,CAAC,mBAAmB,CAAC,CAAS,UAAE,QAAe;gBACjD,aAAa,CAAC,EAAE;YACjB,CAAA;QACF,CAAA;IACG,CAAA;IACR,EAAA,EAAI,EAAE,CAAC,KAAK,EACV,EAAE,CAAC,KAAK;AAEZ,CAAC;SAEQ,aAAa,CAAC,QAAkB,EAAzC,CAAA;IACE,MAAA,CAAO,QAAQ,CAAC,WAAW,CAAC,IAAI,KAAK,CAAa;AACpD,CAAC;SAEQ,aAAa,CAAC,QAAkB,EAAzC,CAAA;IACE,EAAA,EAAI,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK;AAC7C,CAAC;SAEe,IAAI,CAAI,EAAY,EAAE,MAAY,EAAlC,CAAA;IACd,MAAA,CAAO,WAAW,CAAI,EAAE,EAAE,CAAA,CAAE,EAAE,MAAM;AACtC,CAAC;SAEQ,oBAAoB,CAAC,UAAmB,EAAjD,CAAA;IACE,EAAA,EAAI,UAAU,EACZ,KAAA,CAAM,GAAA,CAAI,KAAK,CAAC,CAA4C;AAEhE,CAAC;SAEQ,WAAW,CAClB,EAAY,EACZ,IAAA,GAAqC,CAAA,CAAE,EACvC,MAAA,GAAiB,QAAA,GAAA,CAAA;AAAA,CAAc,EAHjC,CAAA;IAKE,GAAA,CAAI,eAAe,GAAG,KAAK;IAC3B,KAAA,CAAM,KAAK,GAAG,GAAA,CAAI,KAAK,CAAC,MAAM,EAAE,CAAhC;QACE,GAAG,EAAC,OAAO,EAAE,IAAI,EAAjB,CAAA;YACE,oBAAoB,CAAC,eAAe;YACpC,EAAA,EAAI,IAAI,KAAK,YAAY,EACvB,MAAA,KAAA,CAAA;gBACE,MAAA,CAAO,sBAAsB,CAAC,EAAE,EAAE,CAAlC;oBACE,IAAI,EAAJ,CAAA,QAAA,CAAA,AAAA,EAAA,AAAA,SAAA,AAAA,EAAA;oBACA,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,QAAQ;;gBACjC,CAAA,EAAE,IAAI,KAAN,CAAA;oBACC,aAAa,CAAC,EAAE;oBAChB,eAAe,GAAG,IAAI;gBACvB,CAAA;YACF,CAAA;YAEH,EAAA,EAAI,IAAI,KAAK,CAAM,OAAE,CAArB;gBACE,EAAA,EAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EACnB,MAAA,CAAO,CAAA;oBAAE,IAAI,MAAQ,KAAK;gBAAA,CAAE;gBAE9B,KAAA,CAAM,CAAC,GAAG,sBAAsB,CAAC,EAAE,EAAE,CAArC;oBACE,IAAI,EAAJ,CAAA,IAAA,CAAA,AAAA,EAAA,AAAA,KAAA,AAAA,EAAA;oBACA,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,QAAQ;;gBACjC,CAAA,EAAE,IAAI,CAAC,aAAa;gBACrB,MAAA,CAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAA;YACD,MAAA,CAAO,WAAW,CAAC,EAAE,EAAE,CAAC;mBAAG,IAAI;gBAAE,IAAI;YAAA,CAAC;QACvC,CAAA;QACD,GAAG,EAAC,OAAO,EAAE,IAAI,EAAE,QAAQ,EAA3B,CAAA;YACE,oBAAoB,CAAC,eAAe;Y,E,A,gE;Y,E,A,wE;YAGpC,KAAA,EAAO,KAAK,EAAE,aAAa,IAAI,WAAW,CAAC,QAAQ;YACnD,MAAA,CAAO,sBAAsB,CAC3B,EAAE,EACF,CAFF;gBAGI,IAAI,EAAJ,CAAA,IAAA,CAAA,AAAA,EAAA,AAAA,KAAA,AAAA,EAAA;gBACA,IAAI,EAAE,CAAC;uBAAG,IAAI;oBAAE,IAAI;gBAAA,CAAC,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,QAAQ;;gBAC3C,KAAK;YACN,CAAA,EACD,aAAa,EACb,IAAI,CAAC,aAAa;QACrB,CAAA;QACD,KAAK,EAAC,OAAO,EAAE,QAAQ,EAAE,eAAe,EAAxC,CAAA;YACE,oBAAoB,CAAC,eAAe;YACpC,KAAA,CAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC;YACjC,EAAA,EAAK,IAAY,KAAK,cAAc,EAClC,MAAA,CAAO,sBAAsB,CAAC,EAAE,EAAE,CAAlC;gBACE,IAAI,EAAJ,CAAA,SAAA,CAAA,AAAA,EAAA,AAAA,UAAA,AAAA,EAAA;YACD,CAAA,EAAE,IAAI,CAAC,aAAa;Y,E,A,+C;YAGvB,EAAA,EAAI,IAAI,KAAK,CAAM,OACjB,MAAA,CAAO,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE;YAEzC,KAAA,EAAO,YAAY,EAAE,aAAa,IAAI,gBAAgB,CAAC,eAAe;YACtE,MAAA,CAAO,sBAAsB,CAC3B,EAAE,EACF,CAFF;gBAGI,IAAI,EAAJ,CAAA,MAAA,CAAA,AAAA,EAAA,AAAA,OAAA,AAAA,EAAA;gBACA,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,QAAQ;;gBAChC,YAAY;YACb,CAAA,EACD,aAAa,EACb,IAAI,CAAC,aAAa;QACrB,CAAA;QACD,SAAS,EAAC,OAAO,EAAE,eAAe,EAAlC,CAAA;YACE,oBAAoB,CAAC,eAAe;YACpC,KAAA,EAAO,YAAY,EAAE,aAAa,IAAI,gBAAgB,CAAC,eAAe;YACtE,MAAA,CAAO,sBAAsB,CAC3B,EAAE,EACF,CAFF;gBAGI,IAAI,EAAJ,CAAA,UAAA,CAAA,AAAA,EAAA,AAAA,WAAA,AAAA,EAAA;gBACA,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,QAAQ;;gBAChC,YAAY;YACb,CAAA,EACD,aAAa,EACb,IAAI,CAAC,aAAa;QACrB,CAAA;IACF,CAAA;IACD,MAAA,CAAO,KAAY;AACrB,CAAC;SAEQ,MAAM,CAAI,GAAgB,EAAnC,CAAA;IACE,MAAA,CAAO,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,CAAE,EAAE,GAAG;AAC7C,CAAC;SAEQ,gBAAgB,CAAC,YAAmB,EAA7C,CAAA;IACE,KAAA,CAAM,SAAS,GAAG,YAAY,CAAC,GAAG,CAAC,WAAW;IAC9C,MAAA,CAAO,CAAC;QAAA,SAAS,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,CAAC;;QAAI,MAAM,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,GAAK,CAAC,CAAC,CAAC;;IAAG,CAAC;AACzE,CAAC;AAED,KAAA,CAAM,aAAa,GAAG,GAAA,CAAI,OAAO;SACjB,QAAQ,CAAI,GAAM,EAAE,SAAyB,EAA7C,CAAA;IACd,aAAa,CAAC,GAAG,CAAC,GAAG,EAAE,SAAS;IAChC,MAAA,CAAO,GAAG;AACZ,CAAC;SAEe,MAAK,CAAI,GAAM,EAAf,CAAA;IACd,MAAA,CAAO,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,CAAA;SAAG,WAAW,GAAG,IAAI;IAAA,CAAE;AACnD,CAAC;SAEe,cAAc,CAC5B,CAAwB,EACxB,OAAA,GAAuB,IAAI,EAC3B,YAAY,GAAG,CAAG,IAHJ,CAAA;IAKd,MAAA,CAAO,CAAP;QACE,WAAW,GAAG,GAAQ,EAAE,aAA6B,GACnD,CAAC,CAAC,WAAW,CAAC,GAAG,EAAE,YAAY,EAAE,aAAa;;QAChD,gBAAgB,EAAE,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO;QACvD,mBAAmB,EAAE,OAAO,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO;IAC9D,CAAA;AACH,CAAC;SAEQ,WAAW,CAAC,KAAU,EAA/B,CAAA;IACE,GAAA,EAAK,KAAA,EAAO,IAAI,EAAE,OAAO,KAAK,gBAAgB,CAC5C,EAAA,EAAI,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,CAA9B;QACE,KAAA,EAAO,eAAe,EAAE,aAAa,IAAI,OAAO,CAAC,SAAS,CAAC,KAAK;QAChE,MAAA,CAAO,CAAP;YACE,CAAA;gBACE,IAAI,EAAJ,CAAA,QAAA,CAAA,AAAA,EAAA,AAAA,SAAA,AAAA,EAAA;gBACA,IAAI;gBACJ,KAAK,EAAE,eAAe;YACvB,CAAA;YACD,aAAa;QACd,CAAA;IACF,CAAA;IAEH,MAAA,CAAO,CAAP;QACE,CAAA;YACE,IAAI,EAAJ,CAAA,IAAA,CAAA,AAAA,EAAA,AAAA,KAAA,AAAA,EAAA;YACA,KAAK;QACN,CAAA;QACD,aAAa,CAAC,GAAG,CAAC,KAAK,KAAK,CAAA,CAAE;IAC/B,CAAA;AACH,CAAC;SAEQ,aAAa,CAAC,KAAgB,EAAvC,CAAA;IACE,MAAA,CAAQ,KAAK,CAAC,IAAI;QAChB,IAAA,CAAA,CAAA,QAAA,CAAA,AAAA,EAAA,AAAA,SAAA,AAAA,EAAA;YACE,MAAA,CAAO,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,EAAG,WAAW,CAAC,KAAK,CAAC,KAAK;QAClE,IAAA,CAAA,CAAA,IAAA,CAAA,AAAA,EAAA,AAAA,KAAA,AAAA,EAAA;YACE,MAAA,CAAO,KAAK,CAAC,KAAK;;AAExB,CAAC;SAEQ,sBAAsB,CAC7B,EAAY,EACZ,GAAY,EACZ,SAA0B,EAH5B,CAAA;IAKE,MAAA,CAAO,GAAA,CAAI,OAAO,EAAE,OAAO,GAA3B,CAAA;QACE,KAAA,CAAM,EAAE,GAAG,YAAY;QACvB,EAAE,CAAC,gBAAgB,CAAC,CAAS,UAAE,QAAA,CAAS,CAAC,CAAC,EAAgB,EAA1D,CAAA;YACE,EAAA,GAAK,EAAE,CAAC,IAAI,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAC9C,MAAA;YAEF,EAAE,CAAC,mBAAmB,CAAC,CAAS,UAAE,CAAQ;YAC1C,OAAO,CAAC,EAAE,CAAC,IAAI;QACT,CAAA;QACR,EAAA,EAAI,EAAE,CAAC,KAAK,EACV,EAAE,CAAC,KAAK;QAEV,EAAE,CAAC,WAAW,CAAA,MAAA,CAAA,MAAA,CAAA,CAAA;YAAG,EAAE;QAAA,CAAA,EAAK,GAAG,GAAI,SAAS;IACzC,CAAA;AACH,CAAC;SAEQ,YAAY,GAArB,CAAA;IACE,MAAA,CAAO,GAAA,CAAI,KAAK,CAAC,CAAC,EACf,IAAI,CAAC,CAAC,EACN,GAAG,KAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,KAAK,MAAM,CAAC,gBAAgB,EAAE,QAAQ,CAAC,EAAE;MACzE,IAAI,CAAC,CAAG;AACb,CAAA;;;;;;;;;;;;;;;;;;;;ACxiBA,OAAO,CAAC,cAAc,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IACrC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,UAAU,GAAG,CAAC,GAAG,CAAC;QAAA,OAAO,EAAE,CAAC;IAAA,CAAC;AAC7C,CAAC;AAED,OAAO,CAAC,iBAAiB,GAAG,QAAQ,CAAE,CAAC,EAAE,CAAC;IACxC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAY,aAAE,CAAC;QAAA,KAAK,EAAE,IAAI;IAAA,CAAC;AACtD,CAAC;AAED,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAE,MAAM,EAAE,IAAI,EAAE,CAAC;IAC3C,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAE,GAAG,EAAE,CAAC;QAC1C,EAAE,EAAE,GAAG,KAAK,CAAS,YAAI,GAAG,KAAK,CAAY,eAAI,IAAI,CAAC,cAAc,CAAC,GAAG,GACtE,MAAM;QAGR,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC;YAChC,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,QAAQ,GAAI,CAAC;gBAChB,MAAM,CAAC,MAAM,CAAC,GAAG;YACnB,CAAC;QACH,CAAC;IACH,CAAC;IAED,MAAM,CAAC,IAAI;AACb,CAAC;AAED,OAAO,CAAC,MAAM,GAAG,QAAQ,CAAE,IAAI,EAAE,QAAQ,EAAE,GAAG,EAAE,CAAC;IAC/C,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,QAAQ,EAAE,CAAC;QACrC,UAAU,EAAE,IAAI;QAChB,GAAG,EAAE,GAAG;IACV,CAAC;AACH,CAAC","sources":["frontend/src/PROXY.mjs","node_modules/comlink/dist/esm/comlink.mjs","node_modules/comlink/src/comlink.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["import * as Comlink from \"comlink\";\nlet CACHE_NAME = \"@newkind/cache@0.1.1\";\nlet urlsToCache = [\n    '/newkind-service/'\n];\n//1s\nlet CONFIG = {\n    CACHE: CACHE_NAME,\n    URLS: urlsToCache,\n    AllowList: [CACHE_NAME],\n    timeout: 0,\n    memory: {},\n    progressIndicatorUrls: \"/\\?requestId=/i;\",\n    strategy: {\n        NetworkOrCache: false,\n        CacheOnly: false,\n        CacheAndUpdate: false,\n        CacheUpdateAndRefresh: false,\n        EmbeddedFallback: false\n    },\n    contentType: (destination) => {\n        switch (destination) {\n            case'audio':\n                return 'audio/mpeg'\n                break\n            default:\n                return false\n                break\n        }\n    }\n}\n\nself.addEventListener(\"install\", (event) => {\n    event.waitUntil(self.skipWaiting())\n    event.waitUntil(\n        caches.open(CONFIG.CACHE)\n            .then(function(cache) {\n                console.log('💖 addAll', CONFIG.URLS)\n                return cache.addAll(CONFIG.URLS);\n            })\n    );\n    console.log('🖤 service install')\n});\n\nself.addEventListener(\"activate\", (event) => {\n    event.waitUntil(self.clients.claim())\n    event.waitUntil(\n        caches.keys().then(function(cacheNames) {\n            return Promise.all(\n                cacheNames.map(function(cacheName) {\n                    if (CONFIG.AllowList.indexOf(cacheName) === -1) {\n                        return caches.delete(cacheName);\n                    }\n                })\n            );\n        })\n    );\n    console.log('🖤 service activate')\n});\n\nself.addEventListener('notificationclick', function(event) {\n    console.log('🖤 service notificationclick', event)\n    // event.notification.close();df\n\n    // var promise = new Promise(function(resolve) {\n    //     setTimeout(resolve, 1000);\n    // }).then(function() {\n    //     return clients.openWindow(event.data.locator);\n    // });\n    //\n    // event.waitUntil(promise);\n});\n\nself.addEventListener('push', function(event) {\n    console.log('🖤 service push', event)\n    // console.log('Received a push message', event);\n    // let title = 'Yay a message.';\n    // let body = 'We have received a push message.';\n    // let icon = '/images/icon-192x192.png';\n    // let tag = 'simple-push-demo-notification-tag';\n    // event.waitUntil(\n    //     self.registration.showNotification(title, {\n    //         body: body,\n    //         icon: icon,\n    //         tag: tag\n    //     })\n    // );\n});\n\nself.addEventListener('sync', (event) => {\n    console.log('🖤 service sync', event)\n    // console.log('event sync', event)\n    // if (event.tag == 'event1') {f\n    //     event.waitUntil(doSomething())\n    // }вввпарапsssssssssss\n})\n\nself.addEventListener('fetch', event => {\n    console.log('🖤 service fetch', event.request.url)\n    if(CONFIG.strategy.NetworkOrCache) {\n        event.respondWith(fromNetwork(event.request, CONFIG.timeout)\n            .catch((err) => {\n                //console.log(`Error: ${err.message()}`);\n                fromCache(event.request);\n                // .catch(() => return useFallback()));\n            }));\n    } else if(CONFIG.strategy.CacheOnly) {\n        event.respondWith(fromCache(event.request));\n    } else if(CONFIG.strategy.CacheAndUpdate) {\n        event.respondWith(fromCache(event.request));\n        event.waitUntil(update(event.request));\n    } else if(CONFIG.strategy.CacheUpdateAndRefresh) {\n        // Как и в предыдущем примере, сначала `respondWith()` потом `waitUntil()`\n        event.respondWith(fromCache(event.request));\n        event.waitUntil(\n            update(event.request)\n                // В конце, после получения \"свежих\" данных от сервера уведомляем всех клиентов.\n                .then(refresh)\n        );\n    } else {\n        event.respondWith(fetch(new Request(event.request,{ headers: {\n                'Content-Type': CONFIG.contentType(event.request.destination)\n            }}))\n            .then(response => {\n                //console.log('*** service response ***')\n                    if(!response || response.status !== 200 || response.type !== 'basic') {\n                        return response;\n                    }\n                    return response;\n                }\n            ).catch(() => useFallback() )\n        );\n    }\n})\n\nself.addEventListener(\"message\", async (event) => {\n    console.log('🖤 🌼 service message', event.data)\n    if (event.data && event.data.state && event.data.state.isConnected && event.data.state.type === \"proxy-memory\") {\n        console.log('🖤 🌼 service message', event.data.state)\n        for(let port in event.data.state.to) {\n            CONFIG.memory = Comlink.wrap(event.data.state.to[port])\n        }\n       console.log('🖤 🌼 🎫 service message', event.data.state)\n       event.source.postMessage({\n            state: {\n                'proxy-memory': true\n            }\n        })\n    } else {\n        if(event.data.test) {\n            // await CONFIG.memory.fs.list.dir()\n            console.log('🖤 🌼 🎫 service message', event.data.state)\n            event.source.postMessage({\n                state: {\n                    '~~~~~ test ~~~~~': true\n                }\n            })\n        }\n    }\n});\n\nfunction fromNetwork(request, timeout) {\n    return new Promise((fulfill, reject) => {\n        let timeoutId = setTimeout(reject, timeout);\n        fetch(request).then((response) => {\n            clearTimeout(timeoutId);\n            fulfill(response);\n        }, reject);\n    });\n}\n\nfunction fromCache(request) {\n    return caches.open(CONFIG.CACHE).then((cache) =>\n        cache.match(request).then((matching) =>\n            matching || Promise.reject('no-match')\n        ));\n}\n\nfunction update(request) {\n    return caches.open(CONFIG.CACHE).then((cache) =>\n        fetch(request).then((response) =>\n            // cache.put(request, response)\n            cache.put(request, response.clone()).then(() => response)\n        )\n    );\n}\n\n// Шлём сообщения об обновлении данных всем клиентам. dd\nfunction refresh(response) {\n    return self.clients.matchAll().then((clients) => {\n        clients.forEach((client) => {\n            // Подробнее про ETag можно прочитать тут\n            // https://en.wikipedia.org/wiki/HTTP_ETag\n            const message = {\n                type: 'refresh',\n                url: response.url,\n                eTag: response.headers.get('ETag')\n            };\n            // Уведомляем клиент об обновлении данных.\n            client.postMessage(JSON.stringify(message));\n        });\n    });\n}\nconst FALLBACK = `\n<html>\n<head>\n<title>Elite</title>\n<style>\nbody {\n  padding: 3em 0em;\n  background: #eeeeee;\n}\nhr {\n  color: lightgray;\n  width: 100%;\n}\nimg {\n  float: left;\n  opacity: .8;\n}\n#box {\n  background: white;\n  border: 1px solid lightgray;\n  width: 600px;\n  padding: 60px;\n  margin: auto;\n}\nh1 {\n  font-size: 130%;\n  font-weight: bold;\n  border-bottom: 1px solid lightgray;\n  margin-left: 48px;\n}\nh2 {\n  font-size: 100%;\n  font-weight: normal;\n  border-bottom: 1px solid lightgray;\n  margin-left: 48px;\n}\nul {\n  font-size: 80%;\n  padding-left: 48px;\n  margin: 0;\n}\n#reloadButton {\n  padding-left: 48px;\n}\n</style>\n</head>\n<body>\n  <div id=\"box\">\n    <img src=\"data:image/png;base64, AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbbv+DGW3/mRlt/5kZbf+ZGq6/hIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGa3/ohkt/7/Zbj//2S3/v9lt/6WAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGm5/iRlt/74Zbj//2W4//9luP//Zbf++mi4/i4gIPciGhr24hsb9uwbG/bsGhr24CEh9xoAAAAAAAAAAAAAAABnuP5mZLf+/2W4//9luP//Zbj//2S3/v9muP5yGBj2rhMT9v8TE/b/ExP2/xMT9f8YGPWkAAAAAAAAAAAAAAAAb7z/BGW3/tZluP//Zbj//2W4//9lt/7gJzH3ShMT9f8TE/b/ExP2/xMT9v8TE/b/ExP1/CAg9joAAAAAAAAAAAAAAABmuP5GZLf+6GS3/uhkt/7oZbf+UhgY9YQSEvX/ExP2/xMT9v8TE/b/ExP2/xIS9f8aGvZ8AAAAAD4++gQgIPZ6IiL2hiIi9oYgIPZ8KCj5BAAAAAAtLfgUFBT17BMT9v8TE/b/ExP2/xMT9v8VFfXoLCz4DgAAAAAaGvZqEhL1/xMT9v8TE/b/EhL1/xsb9nIAAAAAAAAAABwc9m4SEvX/ExP2/xMT9v8SEvX/HR32ZAAAAAAnJ/gSFRX16hMT9v8TE/b/ExP2/xMT9v8UFPXuJyf4Fp2xlAKNnqUYLC/mfhYW83ATE/VuFxf1aDc3+gIAAAAAGBj1fhIS9f8TE/b/ExP2/xMT9v8TE/b/ExP1/xkZ9YaGn3yIhZ57/4Wee/+Gn3yKAAAAAAAAAAAAAAAAAAAAACMj9zYTE/X8ExP2/xMT9v8TE/b/ExP2/xMT9f9JUshihZ57+IaffP+Gn3z/hZ579oigfiYAAAAAAAAAAAAAAAAAAAAAGBj1oBIS9f8TE/b/ExP2/xMT9f8YGPWmiKB+PIWee/+Gn3z/hp98/4Wee/+HoH06AAAAAAAAAAAAAAAAAAAAACUl9xgVFfXOExP11BMT9dQUFPXQJib3HgAAAACGn3ymhp98/4affP+Gn3ymAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAiKB+EIihf0CIoX9AiKB+EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//8AAP//AADg/wAA4MMAAOCBAADggQAA8QEAAOeBAADDwwAAgf8AAIAPAACBDwAAgQ8AAMMPAAD//wAA//8AAA==\" width=\"32\" height=\"32\"/>\n    <h1>Elite</h1>\n    <h2>When connecting to: https://zababurinsv.github.io/newkind-service/</h2>\n    <ul>\n      <li>Check the address for errors such as <b>ww</b>.example.com\n      instead of <b>www</b>.example.com</li>\n      <li>If the address is correct, try checking the network\n      connection.</li>\n      <li>If your computer or network is protected by a firewall or\n      proxy, make sure that the browser demo is permitted to access\n      the network.</li>\n    </ul>\n    <br/><br/>\n  </div>\n</body>\n</html>\n`\n\nfunction useFallback() {\n    return Promise.resolve(new Response(FALLBACK, { headers: {\n            'Content-Type': 'text/html; charset=utf-8'\n    }}));\n}",null,"/**\n * Copyright 2019 Google Inc. All Rights Reserved.\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *     http://www.apache.org/licenses/LICENSE-2.0\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Endpoint,\n  EventSource,\n  Message,\n  MessageType,\n  PostMessageWithOrigin,\n  WireValue,\n  WireValueType,\n} from \"./protocol\";\nexport { Endpoint };\n\nexport const proxyMarker = Symbol(\"Comlink.proxy\");\nexport const createEndpoint = Symbol(\"Comlink.endpoint\");\nexport const releaseProxy = Symbol(\"Comlink.releaseProxy\");\n\nconst throwMarker = Symbol(\"Comlink.thrown\");\n\n/**\n * Interface of values that were marked to be proxied with `comlink.proxy()`.\n * Can also be implemented by classes.\n */\nexport interface ProxyMarked {\n  [proxyMarker]: true;\n}\n\n/**\n * Takes a type and wraps it in a Promise, if it not already is one.\n * This is to avoid `Promise<Promise<T>>`.\n *\n * This is the inverse of `Unpromisify<T>`.\n */\ntype Promisify<T> = T extends Promise<unknown> ? T : Promise<T>;\n/**\n * Takes a type that may be Promise and unwraps the Promise type.\n * If `P` is not a Promise, it returns `P`.\n *\n * This is the inverse of `Promisify<T>`.\n */\ntype Unpromisify<P> = P extends Promise<infer T> ? T : P;\n\n/**\n * Takes the raw type of a remote property and returns the type that is visible to the local thread on the proxy.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions.\n * See https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype RemoteProperty<T> =\n  // If the value is a method, comlink will proxy it automatically.\n  // Objects are only proxied if they are marked to be proxied.\n  // Otherwise, the property is converted to a Promise that resolves the cloned value.\n  T extends Function | ProxyMarked ? Remote<T> : Promisify<T>;\n\n/**\n * Takes the raw type of a property as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This is the inverse of `RemoteProperty<T>`.\n *\n * Note: This needs to be its own type alias, otherwise it will not distribute over unions. See\n * https://www.typescriptlang.org/docs/handbook/advanced-types.html#distributive-conditional-types\n */\ntype LocalProperty<T> = T extends Function | ProxyMarked\n  ? Local<T>\n  : Unpromisify<T>;\n\n/**\n * Proxies `T` if it is a `ProxyMarked`, clones it otherwise (as handled by structured cloning and transfer handlers).\n */\nexport type ProxyOrClone<T> = T extends ProxyMarked ? Remote<T> : T;\n/**\n * Inverse of `ProxyOrClone<T>`.\n */\nexport type UnproxyOrClone<T> = T extends RemoteObject<ProxyMarked>\n  ? Local<T>\n  : T;\n\n/**\n * Takes the raw type of a remote object in the other thread and returns the type as it is visible to the local thread\n * when proxied with `Comlink.proxy()`.\n *\n * This does not handle call signatures, which is handled by the more general `Remote<T>` type.\n *\n * @template T The raw type of a remote object as seen in the other thread.\n */\nexport type RemoteObject<T> = { [P in keyof T]: RemoteProperty<T[P]> };\n/**\n * Takes the type of an object as a remote thread would see it through a proxy (e.g. when passed in as a function\n * argument) and returns the type that the local thread has to supply.\n *\n * This does not handle call signatures, which is handled by the more general `Local<T>` type.\n *\n * This is the inverse of `RemoteObject<T>`.\n *\n * @template T The type of a proxied object.\n */\nexport type LocalObject<T> = { [P in keyof T]: LocalProperty<T[P]> };\n\n/**\n * Additional special comlink methods available on each proxy returned by `Comlink.wrap()`.\n */\nexport interface ProxyMethods {\n  [createEndpoint]: () => Promise<MessagePort>;\n  [releaseProxy]: () => void;\n}\n\n/**\n * Takes the raw type of a remote object, function or class in the other thread and returns the type as it is visible to\n * the local thread from the proxy return value of `Comlink.wrap()` or `Comlink.proxy()`.\n */\nexport type Remote<T> =\n  // Handle properties\n  RemoteObject<T> &\n    // Handle call signature (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: UnproxyOrClone<TArguments[I]> }\n        ) => Promisify<ProxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: UnproxyOrClone<TArguments[I]>;\n            }\n          ): Promisify<Remote<TInstance>>;\n        }\n      : unknown) &\n    // Include additional special comlink methods available on the proxy.\n    ProxyMethods;\n\n/**\n * Expresses that a type can be either a sync or async.\n */\ntype MaybePromise<T> = Promise<T> | T;\n\n/**\n * Takes the raw type of a remote object, function or class as a remote thread would see it through a proxy (e.g. when\n * passed in as a function argument) and returns the type the local thread has to supply.\n *\n * This is the inverse of `Remote<T>`. It takes a `Remote<T>` and returns its original input `T`.\n */\nexport type Local<T> =\n  // Omit the special proxy methods (they don't need to be supplied, comlink adds them)\n  Omit<LocalObject<T>, keyof ProxyMethods> &\n    // Handle call signatures (if present)\n    (T extends (...args: infer TArguments) => infer TReturn\n      ? (\n          ...args: { [I in keyof TArguments]: ProxyOrClone<TArguments[I]> }\n        ) => // The raw function could either be sync or async, but is always proxied automatically\n        MaybePromise<UnproxyOrClone<Unpromisify<TReturn>>>\n      : unknown) &\n    // Handle construct signature (if present)\n    // The return of construct signatures is always proxied (whether marked or not)\n    (T extends { new (...args: infer TArguments): infer TInstance }\n      ? {\n          new (\n            ...args: {\n              [I in keyof TArguments]: ProxyOrClone<TArguments[I]>;\n            }\n          ): // The raw constructor could either be sync or async, but is always proxied automatically\n          MaybePromise<Local<Unpromisify<TInstance>>>;\n        }\n      : unknown);\n\nconst isObject = (val: unknown): val is object =>\n  (typeof val === \"object\" && val !== null) || typeof val === \"function\";\n\n/**\n * Customizes the serialization of certain values as determined by `canHandle()`.\n *\n * @template T The input type being handled by this transfer handler.\n * @template S The serialized type sent over the wire.\n */\nexport interface TransferHandler<T, S> {\n  /**\n   * Gets called for every value to determine whether this transfer handler\n   * should serialize the value, which includes checking that it is of the right\n   * type (but can perform checks beyond that as well).\n   */\n  canHandle(value: unknown): value is T;\n\n  /**\n   * Gets called with the value if `canHandle()` returned `true` to produce a\n   * value that can be sent in a message, consisting of structured-cloneable\n   * values and/or transferrable objects.\n   */\n  serialize(value: T): [S, Transferable[]];\n\n  /**\n   * Gets called to deserialize an incoming value that was serialized in the\n   * other thread with this transfer handler (known through the name it was\n   * registered under).\n   */\n  deserialize(value: S): T;\n}\n\n/**\n * Internal transfer handle to handle objects marked to proxy.\n */\nconst proxyTransferHandler: TransferHandler<object, MessagePort> = {\n  canHandle: (val): val is ProxyMarked =>\n    isObject(val) && (val as ProxyMarked)[proxyMarker],\n  serialize(obj) {\n    const { port1, port2 } = new MessageChannel();\n    expose(obj, port1);\n    return [port2, [port2]];\n  },\n  deserialize(port) {\n    port.start();\n    return wrap(port);\n  },\n};\n\ninterface ThrownValue {\n  [throwMarker]: unknown; // just needs to be present\n  value: unknown;\n}\ntype SerializedThrownValue =\n  | { isError: true; value: Error }\n  | { isError: false; value: unknown };\n\n/**\n * Internal transfer handler to handle thrown exceptions.\n */\nconst throwTransferHandler: TransferHandler<\n  ThrownValue,\n  SerializedThrownValue\n> = {\n  canHandle: (value): value is ThrownValue =>\n    isObject(value) && throwMarker in value,\n  serialize({ value }) {\n    let serialized: SerializedThrownValue;\n    if (value instanceof Error) {\n      serialized = {\n        isError: true,\n        value: {\n          message: value.message,\n          name: value.name,\n          stack: value.stack,\n        },\n      };\n    } else {\n      serialized = { isError: false, value };\n    }\n    return [serialized, []];\n  },\n  deserialize(serialized) {\n    if (serialized.isError) {\n      throw Object.assign(\n        new Error(serialized.value.message),\n        serialized.value\n      );\n    }\n    throw serialized.value;\n  },\n};\n\n/**\n * Allows customizing the serialization of certain values.\n */\nexport const transferHandlers = new Map<\n  string,\n  TransferHandler<unknown, unknown>\n>([\n  [\"proxy\", proxyTransferHandler],\n  [\"throw\", throwTransferHandler],\n]);\n\nexport function expose(obj: any, ep: Endpoint = self as any) {\n  ep.addEventListener(\"message\", function callback(ev: MessageEvent) {\n    if (!ev || !ev.data) {\n      return;\n    }\n    const { id, type, path } = {\n      path: [] as string[],\n      ...(ev.data as Message),\n    };\n    const argumentList = (ev.data.argumentList || []).map(fromWireValue);\n    let returnValue;\n    try {\n      const parent = path.slice(0, -1).reduce((obj, prop) => obj[prop], obj);\n      const rawValue = path.reduce((obj, prop) => obj[prop], obj);\n      switch (type) {\n        case MessageType.GET:\n          {\n            returnValue = rawValue;\n          }\n          break;\n        case MessageType.SET:\n          {\n            parent[path.slice(-1)[0]] = fromWireValue(ev.data.value);\n            returnValue = true;\n          }\n          break;\n        case MessageType.APPLY:\n          {\n            returnValue = rawValue.apply(parent, argumentList);\n          }\n          break;\n        case MessageType.CONSTRUCT:\n          {\n            const value = new rawValue(...argumentList);\n            returnValue = proxy(value);\n          }\n          break;\n        case MessageType.ENDPOINT:\n          {\n            const { port1, port2 } = new MessageChannel();\n            expose(obj, port2);\n            returnValue = transfer(port1, [port1]);\n          }\n          break;\n        case MessageType.RELEASE:\n          {\n            returnValue = undefined;\n          }\n          break;\n        default:\n          return;\n      }\n    } catch (value) {\n      returnValue = { value, [throwMarker]: 0 };\n    }\n    Promise.resolve(returnValue)\n      .catch((value) => {\n        return { value, [throwMarker]: 0 };\n      })\n      .then((returnValue) => {\n        const [wireValue, transferables] = toWireValue(returnValue);\n        ep.postMessage({ ...wireValue, id }, transferables);\n        if (type === MessageType.RELEASE) {\n          // detach and deactive after sending release response above.\n          ep.removeEventListener(\"message\", callback as any);\n          closeEndPoint(ep);\n        }\n      });\n  } as any);\n  if (ep.start) {\n    ep.start();\n  }\n}\n\nfunction isMessagePort(endpoint: Endpoint): endpoint is MessagePort {\n  return endpoint.constructor.name === \"MessagePort\";\n}\n\nfunction closeEndPoint(endpoint: Endpoint) {\n  if (isMessagePort(endpoint)) endpoint.close();\n}\n\nexport function wrap<T>(ep: Endpoint, target?: any): Remote<T> {\n  return createProxy<T>(ep, [], target) as any;\n}\n\nfunction throwIfProxyReleased(isReleased: boolean) {\n  if (isReleased) {\n    throw new Error(\"Proxy has been released and is not useable\");\n  }\n}\n\nfunction createProxy<T>(\n  ep: Endpoint,\n  path: (string | number | symbol)[] = [],\n  target: object = function () {}\n): Remote<T> {\n  let isProxyReleased = false;\n  const proxy = new Proxy(target, {\n    get(_target, prop) {\n      throwIfProxyReleased(isProxyReleased);\n      if (prop === releaseProxy) {\n        return () => {\n          return requestResponseMessage(ep, {\n            type: MessageType.RELEASE,\n            path: path.map((p) => p.toString()),\n          }).then(() => {\n            closeEndPoint(ep);\n            isProxyReleased = true;\n          });\n        };\n      }\n      if (prop === \"then\") {\n        if (path.length === 0) {\n          return { then: () => proxy };\n        }\n        const r = requestResponseMessage(ep, {\n          type: MessageType.GET,\n          path: path.map((p) => p.toString()),\n        }).then(fromWireValue);\n        return r.then.bind(r);\n      }\n      return createProxy(ep, [...path, prop]);\n    },\n    set(_target, prop, rawValue) {\n      throwIfProxyReleased(isProxyReleased);\n      // FIXME: ES6 Proxy Handler `set` methods are supposed to return a\n      // boolean. To show good will, we return true asynchronously ¯\\_(ツ)_/¯\n      const [value, transferables] = toWireValue(rawValue);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.SET,\n          path: [...path, prop].map((p) => p.toString()),\n          value,\n        },\n        transferables\n      ).then(fromWireValue) as any;\n    },\n    apply(_target, _thisArg, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const last = path[path.length - 1];\n      if ((last as any) === createEndpoint) {\n        return requestResponseMessage(ep, {\n          type: MessageType.ENDPOINT,\n        }).then(fromWireValue);\n      }\n      // We just pretend that `bind()` didn’t happen.\n      if (last === \"bind\") {\n        return createProxy(ep, path.slice(0, -1));\n      }\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.APPLY,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n    construct(_target, rawArgumentList) {\n      throwIfProxyReleased(isProxyReleased);\n      const [argumentList, transferables] = processArguments(rawArgumentList);\n      return requestResponseMessage(\n        ep,\n        {\n          type: MessageType.CONSTRUCT,\n          path: path.map((p) => p.toString()),\n          argumentList,\n        },\n        transferables\n      ).then(fromWireValue);\n    },\n  });\n  return proxy as any;\n}\n\nfunction myFlat<T>(arr: (T | T[])[]): T[] {\n  return Array.prototype.concat.apply([], arr);\n}\n\nfunction processArguments(argumentList: any[]): [WireValue[], Transferable[]] {\n  const processed = argumentList.map(toWireValue);\n  return [processed.map((v) => v[0]), myFlat(processed.map((v) => v[1]))];\n}\n\nconst transferCache = new WeakMap<any, Transferable[]>();\nexport function transfer<T>(obj: T, transfers: Transferable[]): T {\n  transferCache.set(obj, transfers);\n  return obj;\n}\n\nexport function proxy<T>(obj: T): T & ProxyMarked {\n  return Object.assign(obj, { [proxyMarker]: true }) as any;\n}\n\nexport function windowEndpoint(\n  w: PostMessageWithOrigin,\n  context: EventSource = self,\n  targetOrigin = \"*\"\n): Endpoint {\n  return {\n    postMessage: (msg: any, transferables: Transferable[]) =>\n      w.postMessage(msg, targetOrigin, transferables),\n    addEventListener: context.addEventListener.bind(context),\n    removeEventListener: context.removeEventListener.bind(context),\n  };\n}\n\nfunction toWireValue(value: any): [WireValue, Transferable[]] {\n  for (const [name, handler] of transferHandlers) {\n    if (handler.canHandle(value)) {\n      const [serializedValue, transferables] = handler.serialize(value);\n      return [\n        {\n          type: WireValueType.HANDLER,\n          name,\n          value: serializedValue,\n        },\n        transferables,\n      ];\n    }\n  }\n  return [\n    {\n      type: WireValueType.RAW,\n      value,\n    },\n    transferCache.get(value) || [],\n  ];\n}\n\nfunction fromWireValue(value: WireValue): any {\n  switch (value.type) {\n    case WireValueType.HANDLER:\n      return transferHandlers.get(value.name)!.deserialize(value.value);\n    case WireValueType.RAW:\n      return value.value;\n  }\n}\n\nfunction requestResponseMessage(\n  ep: Endpoint,\n  msg: Message,\n  transfers?: Transferable[]\n): Promise<WireValue> {\n  return new Promise((resolve) => {\n    const id = generateUUID();\n    ep.addEventListener(\"message\", function l(ev: MessageEvent) {\n      if (!ev.data || !ev.data.id || ev.data.id !== id) {\n        return;\n      }\n      ep.removeEventListener(\"message\", l as any);\n      resolve(ev.data);\n    } as any);\n    if (ep.start) {\n      ep.start();\n    }\n    ep.postMessage({ id, ...msg }, transfers);\n  });\n}\n\nfunction generateUUID(): string {\n  return new Array(4)\n    .fill(0)\n    .map(() => Math.floor(Math.random() * Number.MAX_SAFE_INTEGER).toString(16))\n    .join(\"-\");\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":[],"version":3,"file":"PROXY.58be73b4.js.map","sourceRoot":"/__parcel_source_root/"}